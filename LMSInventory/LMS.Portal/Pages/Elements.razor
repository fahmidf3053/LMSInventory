@page "/elements"
@using Newtonsoft.Json;
@inject HttpClientHelper Http

<PageTitle>Elements</PageTitle>

<div class="text-center">
    <h1>Available Elements</h1>
</div>

@if (elements == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table text-center">
        <thead>
            <tr>
                <th>Name</th>
                <th>Rack</th>
                <th>Height</th>
                <th>Width</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var element in elements)
            {
                <tr>
                    <td>@element.Name</td>
                    <td>@element.RackName</td>
                    <td>@element.Height</td>
                    <td>@element.Width</td>
                    <td>
                        <div class="d-flex justify-content-center">
                            <NavLink class="m-2" href="">
                                <span class="oi oi-pencil" aria-hidden="true"></span>
                            </NavLink>
                            <NavLink class="m-2" href="">
                                <span class="oi oi-circle-x" aria-hidden="true"></span>
                            </NavLink>
                        </div>
                    </td>
                </tr>

            }
            <tr>
                <td colspan="5">
                    <NavLink href="addelement">
                        <span class="oi oi-plus" aria-hidden="true"></span>
                    </NavLink>
                </td>
            </tr>
        </tbody>
    </table>
}

@code {
    private ElementResDTO[]? elements;

    protected override async Task OnInitializedAsync()
    {
        var resp = await Http.Post(Constants.APIEndpoints.GET_ALL_ELEMENTS, "", true);
        resp.EnsureSuccessStatusCode();

        var result = resp.Content.ReadAsStringAsync().Result;
        elements = JsonConvert.DeserializeObject<ElementResDTO[]>(result);
    }
}
