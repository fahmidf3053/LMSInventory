USE [master]
GO
IF  EXISTS (SELECT 1 FROM sys.databases WHERE database_id = DB_ID(N'LMSInventory'))
BEGIN
	ALTER DATABASE [LMSInventory] SET SINGLE_USER WITH ROLLBACK IMMEDIATE
END
GO

IF  EXISTS (SELECT 1 FROM sys.databases WHERE database_id = DB_ID(N'LMSInventory'))
BEGIN
	EXEC msdb.dbo.sp_delete_database_backuphistory @database_name = N'LMSInventory'	
	DROP DATABASE [LMSInventory]
END
GO

CREATE DATABASE [LMSInventory]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'LMSInventory', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER03\MSSQL\DATA\LMSInventory.mdf' , SIZE = 8192KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'LMSInventory_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER03\MSSQL\DATA\LMSInventory_log.ldf' , SIZE = 8192KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )
 WITH CATALOG_COLLATION = DATABASE_DEFAULT
GO
ALTER DATABASE [LMSInventory] SET COMPATIBILITY_LEVEL = 150
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [LMSInventory].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [LMSInventory] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [LMSInventory] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [LMSInventory] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [LMSInventory] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [LMSInventory] SET ARITHABORT OFF 
GO
ALTER DATABASE [LMSInventory] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [LMSInventory] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [LMSInventory] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [LMSInventory] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [LMSInventory] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [LMSInventory] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [LMSInventory] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [LMSInventory] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [LMSInventory] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [LMSInventory] SET  DISABLE_BROKER 
GO
ALTER DATABASE [LMSInventory] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [LMSInventory] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [LMSInventory] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [LMSInventory] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [LMSInventory] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [LMSInventory] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [LMSInventory] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [LMSInventory] SET RECOVERY FULL 
GO
ALTER DATABASE [LMSInventory] SET  MULTI_USER 
GO
ALTER DATABASE [LMSInventory] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [LMSInventory] SET DB_CHAINING OFF 
GO
ALTER DATABASE [LMSInventory] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO
ALTER DATABASE [LMSInventory] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO
ALTER DATABASE [LMSInventory] SET DELAYED_DURABILITY = DISABLED 
GO
ALTER DATABASE [LMSInventory] SET ACCELERATED_DATABASE_RECOVERY = OFF  
GO
EXEC sys.sp_db_vardecimal_storage_format N'LMSInventory', N'ON'
GO
ALTER DATABASE [LMSInventory] SET QUERY_STORE = OFF
GO
USE [LMSInventory]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[__EFMigrationsHistory](
	[MigrationId] [nvarchar](150) NOT NULL,
	[ProductVersion] [nvarchar](32) NOT NULL,
 CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY CLUSTERED 
(
	[MigrationId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Element](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Name] [varchar](100) NOT NULL,
	[Height] [int] NOT NULL,
	[Width] [int] NOT NULL,
	[RackId] [int] NOT NULL,
	[EntityState] [int] NOT NULL,
 CONSTRAINT [PK_Element] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Rack](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Name] [varchar](200) NOT NULL,
	[QuantityOfRacks] [int] NOT NULL,
	[StoreId] [int] NOT NULL,
	[EntityState] [int] NOT NULL,
 CONSTRAINT [PK_Rack] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Store](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Name] [varchar](100) NOT NULL,
	[Country] [varchar](50) NOT NULL,
	[EntityState] [int] NOT NULL,
 CONSTRAINT [PK_Store] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE NONCLUSTERED INDEX [IX_Element_RackId] ON [dbo].[Element]
(
	[RackId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO

CREATE NONCLUSTERED INDEX [IX_Rack_StoreId] ON [dbo].[Rack]
(
	[StoreId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
ALTER TABLE [dbo].[Element]  WITH CHECK ADD  CONSTRAINT [FK_Element_Rack_RackId] FOREIGN KEY([RackId])
REFERENCES [dbo].[Rack] ([Id])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[Element] CHECK CONSTRAINT [FK_Element_Rack_RackId]
GO
ALTER TABLE [dbo].[Rack]  WITH CHECK ADD  CONSTRAINT [FK_Rack_Store_StoreId] FOREIGN KEY([StoreId])
REFERENCES [dbo].[Store] ([Id])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[Rack] CHECK CONSTRAINT [FK_Rack_Store_StoreId]
GO
USE [master]
GO
ALTER DATABASE [LMSInventory] SET  READ_WRITE 
GO

USE [master]
GO
IF NOT EXISTS (SELECT * FROM master.sys.sql_logins WHERE name = N'LMS')
BEGIN
	CREATE LOGIN [LMS] 
		WITH PASSWORD=N'dYnDLUa9Yb/EA5Zz+CardI1PpJYrQrsHHj78f2OM0JI=', 
		DEFAULT_DATABASE=[LMSInventory], 
		DEFAULT_LANGUAGE=[us_english], 
		CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
END
GO

Use [LMSInventory];
GO

IF NOT EXISTS (SELECT * FROM [LMSInventory].sys.database_principals WHERE name = N'LMS')
BEGIN
    CREATE USER LMS FOR LOGIN LMS
    EXEC sp_addrolemember N'db_owner', N'LMS'
END;

GO